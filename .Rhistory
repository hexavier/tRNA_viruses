## Correlations between gene expression or methylation
plot_correlation <- function(x,y,x_label,y_label,title)
{
# Plot correlation
plot(x,y,main=title, xlab=x_label, ylab=y_label, pch=20)
#abline(lm(y ~ x))
r_pearson = cor(x,y,method = "pearson")
r_spearman = cor(x,y,method = "spearman")
mtext(bquote(paste("R"["pearson"]*' = ', .(r_pearson))),line=-1.5,adj=0.05)
mtext(bquote(paste("R"["spearman"]*' = ', .(r_spearman))),line=-2.5,adj=0.05)
}
# Load genes
prolif_genes = c("CDKN3", "ILF2", "KDELR2", "RFC4", "TOP2A", "MCM3", "KPNA2", "CKS2", "CDK1")
#prolif_genes = as.character(read.table("data/GOpos_neuron_diff.csv")$V1)
#prolif_genes = as.character(read.table("data/GOpos_cell_differentiation.csv")$V1)
xlabel = "SRRM4"
ylabel = "MitoticIndex"
# Load data
gtex = read.csv("/home/xhernandez/Downloads/GTEX/GTEx_Analysis_2016-01-15_v7_RNASeQCv1.1.8_gene_tpm.gct", sep="\t", row.names = "Name", skip=2)
gtex_tissue = read.csv("/home/xhernandez/Downloads/GTEX/GTEx_Analysis_2016-01-15_v7_RNASeQCv1.1.8_gene_median_tpm.gct", sep="\t", row.names = "gene_id", skip=2)
vastdb = read.csv("/home/xhernandez/Downloads/VASTDB_HUMAN/VASTDB_EXPRESSION_Hsa108_hg19.tab", sep="\t", row.names = "ID")
vastdb = cbind(gene=vastdb[,"NAME"],vastdb[,c(F,T)])
# Sample data of GTEx
gtex_samples = read.csv("/home/xhernandez/Downloads/GTEX/GTEx_v7_Annotations_SampleAttributesDS.txt", sep="\t", row.names = "SAMPID")
colnames(gtex)[2:ncol(gtex)] = gtex_samples[gsub("\\.","-",colnames(gtex)[2:ncol(gtex)]),"SMTS"]
library(stringr)
## Correlations between gene expression or methylation
plot_correlation <- function(x,y,x_label,y_label,title)
{
# Plot correlation
plot(x,y,main=title, xlab=x_label, ylab=y_label, pch=20)
#abline(lm(y ~ x))
r_pearson = cor(x,y,method = "pearson")
r_spearman = cor(x,y,method = "spearman")
mtext(bquote(paste("R"["pearson"]*' = ', .(r_pearson))),line=-1.5,adj=0.05)
mtext(bquote(paste("R"["spearman"]*' = ', .(r_spearman))),line=-2.5,adj=0.05)
}
# Load genes
prolif_genes = c("CDKN3", "ILF2", "KDELR2", "RFC4", "TOP2A", "MCM3", "KPNA2", "CKS2", "CDK1")
#prolif_genes = as.character(read.table("data/GOpos_neuron_diff.csv")$V1)
#prolif_genes = as.character(read.table("data/GOpos_cell_differentiation.csv")$V1)
xlabel = "SRRM4"
ylabel = "MitoticIndex"
# Load data
gtex = read.csv("/home/xhernandez/Downloads/GTEX/GTEx_Analysis_2016-01-15_v7_RNASeQCv1.1.8_gene_tpm.gct", sep="\t", row.names = "Name", skip=2)
gtex_tissue = read.csv("/home/xhernandez/Downloads/GTEX/GTEx_Analysis_2016-01-15_v7_RNASeQCv1.1.8_gene_median_tpm.gct", sep="\t", row.names = "gene_id", skip=2)
vastdb = read.csv("/home/xhernandez/Downloads/VASTDB_HUMAN/VASTDB_EXPRESSION_Hsa108_hg19.tab", sep="\t", row.names = "ID")
vastdb = cbind(gene=vastdb[,"NAME"],vastdb[,c(F,T)])
gtex_samples = read.csv("/home/xhernandez/Downloads/GTEX/GTEx_v7_Annotations_SampleAttributesDS.txt", sep="\t", row.names = "SAMPID")
gtex_samples[gsub("\\.","-",colnames(gtex)[2:ncol(gtex)]),"SMTS"]
as.character(gtex_samples[gsub("\\.","-",colnames(gtex)[2:ncol(gtex)]),"SMTS"])
colnames(gtex)[2:ncol(gtex)]
colnames(gtex)[2:ncol(gtex)] <- as.character(gtex_samples[gsub("\\.","-",colnames(gtex)[2:ncol(gtex)]),"SMTS"])
gtex = gtex[,!grepl("Brain",colnames(gtex))]
srrm4data = as.numeric(gtex[gtex$Description==xlabel,2:ncol(gtex)])
mitindexdata = colMeans(gtex[(gtex$Description %in% prolif_genes),2:ncol(gtex)],na.rm = T)
output = cor(srrm4data,mitindexdata,method = "spearman")
plot_correlation(srrm4data,mitindexdata,xlabel,ylabel,sprintf("Exp(%s) VS Exp(%s)",xlabel,ylabel))
text(srrm4data,mitindexdata, labels = colnames(gtex)[2:ncol(gtex)], cex=0.7, pos = 4)
srrm4data = as.numeric(gtex[gtex$Description==xlabel,2:ncol(gtex)])
mitindexdata = colMeans(gtex[(gtex$Description %in% prolif_genes),2:ncol(gtex)],na.rm = T)
output = cor(srrm4data,mitindexdata,method = "spearman")
plot_correlation(srrm4data,mitindexdata,xlabel,ylabel,sprintf("Exp(%s) VS Exp(%s)",xlabel,ylabel))
array(NaN,100,100,60)
array(NaN,c(100,100,60))
test = array(NaN,c(100,100,60))
test = array(1,c(100,100,60))
test = matrix(1,c(100,5))
test
test = array(1,c(100,5))
test
apply(test,1,sum)
apply(test,2,sum)
apply(test,2,function(x) sum(x))
(27/69)/(11/35)
(7/69)/(5/35)
test=c("AQR","AQR","AQR","AQR","AQR","AQR","AQR","AQR","AQR","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BICC1","BICC1","BICC1","BICC1","BICC1","BICC1","BICC1","BICC1","BICC1","BUD13","BUD13","BUD13","BUD13","BUD13","BUD13","BUD13","BUD13","BUD13","BUD31","BUD31","BUD31","BUD31","BUD31","BUD31","BUD31","BUD31","BUD31","CELF1","CELF1","CELF1","CELF1","CELF1","CELF1","CELF1","CELF1","CELF1","CELF2","CELF2","CELF2","CELF2","CELF2","CELF2","CELF2","CELF2","CELF2","CELF3","CELF3","CELF3","CELF3","CELF3","CELF3","CELF3","CELF3","CELF3","CELF4","CELF4","CELF4","CELF4","CELF4","CELF4","CELF4","CELF4","CELF4","CELF5","CELF5","CELF5","CELF5","CELF5","CELF5","CELF5","CELF5","CELF5","CELF6","CELF6","CELF6","CELF6","CELF6","CELF6","CELF6","CELF6","CELF6","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CWC15","CWC15","CWC15","CWC15","CWC15","CWC15","CWC15","CWC15","CWC15","CWC25","CWC25","CWC25","CWC25","CWC25","CWC25","CWC25","CWC25","CWC25","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUS","FUS","FUS","FUS","FUS","FUS","FUS","FUS","FUS","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","LSM1","LSM1","LSM1","LSM1","LSM1","LSM1","LSM1","LSM1","LSM1","LSM10","LSM10","LSM10","LSM10","LSM10","LSM10","LSM10","LSM10","LSM10","LSM2","LSM2","LSM2","LSM2","LSM2","LSM2","LSM2","LSM2","LSM2","LSM3","LSM3","LSM3","LSM3","LSM3","LSM3","LSM3","LSM3","LSM3","LSM4","LSM4","LSM4","LSM4","LSM4","LSM4","LSM4","LSM4","LSM4","LSM5","LSM5","LSM5","LSM5","LSM5","LSM5","LSM5","LSM5","LSM5","LSM6","LSM6","LSM6","LSM6","LSM6","LSM6","LSM6","LSM6","LSM6","LSM7","LSM7","LSM7","LSM7","LSM7","LSM7","LSM7","LSM7","LSM7","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MSI1","MSI1","MSI1","MSI1","MSI1","MSI1","MSI1","MSI1","MSI1","MSI2","MSI2","MSI2","MSI2","MSI2","MSI2","MSI2","MSI2","MSI2","NAA38","NAA38","NAA38","NAA38","NAA38","NAA38","NAA38","NAA38","NAA38","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","ROD1","ROD1","ROD1","ROD1","ROD1","ROD1","ROD1","ROD1","ROD1","PUF60","PUF60","PUF60","PUF60","PUF60","PUF60","PUF60","PUF60","PUF60","QKI","QKI","QKI","QKI","QKI","QKI","QKI","QKI","QKI","RALY","RALY","RALY","RALY","RALY","RALY","RALY","RALY","RALY","RALYL","RALYL","RALYL","RALYL","RALYL","RALYL","RALYL","RALYL","RALYL","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","RBM9","RBM9","RBM9","RBM9","RBM9","RBM9","RBM9","RBM9","RBM9","RBM10","RBM10","RBM10","RBM10","RBM10","RBM10","RBM10","RBM10","RBM10","RBM12","RBM12","RBM12","RBM12","RBM12","RBM12","RBM12","RBM12","RBM12","RBM14","RBM14","RBM14","RBM14","RBM14","RBM14","RBM14","RBM14","RBM14","RBM15","RBM15","RBM15","RBM15","RBM15","RBM15","RBM15","RBM15","RBM15","RBM17","RBM17","RBM17","RBM17","RBM17","RBM17","RBM17","RBM17","RBM17","RBM18","RBM18","RBM18","RBM18","RBM18","RBM18","RBM18","RBM18","RBM18","RBM19","RBM19","RBM19","RBM19","RBM19","RBM19","RBM19","RBM19","RBM19","RBM20","RBM20","RBM20","RBM20","RBM20","RBM20","RBM20","RBM20","RBM20","RBM22","RBM22","RBM22","RBM22","RBM22","RBM22","RBM22","RBM22","RBM22","RBM24","RBM24","RBM24","RBM24","RBM24","RBM24","RBM24","RBM24","RBM24","RBM25","RBM25","RBM25","RBM25","RBM25","RBM25","RBM25","RBM25","RBM25","RBM26","RBM26","RBM26","RBM26","RBM26","RBM26","RBM26","RBM26","RBM26","RBM27","RBM27","RBM27","RBM27","RBM27","RBM27","RBM27","RBM27","RBM27","RBM28","RBM28","RBM28","RBM28","RBM28","RBM28","RBM28","RBM28","RBM28","RBM3","RBM3","RBM3","RBM3","RBM3","RBM3","RBM3","RBM3","RBM3","RBM33","RBM33","RBM33","RBM33","RBM33","RBM33","RBM33","RBM33","RBM33","RBM34","RBM34","RBM34","RBM34","RBM34","RBM34","RBM34","RBM34","RBM34","RBM38","RBM38","RBM38","RBM38","RBM38","RBM38","RBM38","RBM38","RBM38","RBM39","RBM39","RBM39","RBM39","RBM39","RBM39","RBM39","RBM39","RBM39","RBM4","RBM4","RBM4","RBM4","RBM4","RBM4","RBM4","RBM4","RBM4","RBM41","RBM41","RBM41","RBM41","RBM41","RBM41","RBM41","RBM41","RBM41","RBM42","RBM42","RBM42","RBM42","RBM42","RBM42","RBM42","RBM42","RBM42","RBM43","RBM43","RBM43","RBM43","RBM43","RBM43","RBM43","RBM43","RBM43","RBM45","RBM45","RBM45","RBM45","RBM45","RBM45","RBM45","RBM45","RBM45","RBM47","RBM47","RBM47","RBM47","RBM47","RBM47","RBM47","RBM47","RBM47","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM5","RBM5","RBM5","RBM5","RBM5","RBM5","RBM5","RBM5","RBM5","RBM6","RBM6","RBM6","RBM6","RBM6","RBM6","RBM6","RBM6","RBM6","RBM7","RBM7","RBM7","RBM7","RBM7","RBM7","RBM7","RBM7","RBM7","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RDBP","RDBP","RDBP","RDBP","RDBP","RDBP","RDBP","RDBP","RDBP","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","SART1","SART1","SART1","SART1","SART1","SART1","SART1","SART1","SART1","SART3","SART3","SART3","SART3","SART3","SART3","SART3","SART3","SART3","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","RBM16","RBM16","RBM16","RBM16","RBM16","RBM16","RBM16","RBM16","RBM16","SF1","SF1","SF1","SF1","SF1","SF1","SF1","SF1","SF1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SLU7","SLU7","SLU7","SLU7","SLU7","SLU7","SLU7","SLU7","SLU7","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMU1","SMU1","SMU1","SMU1","SMU1","SMU1","SMU1","SMU1","SMU1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SYF2","SYF2","SYF2","SYF2","SYF2","SYF2","SYF2","SYF2","SYF2","TIA1","TIA1","TIA1","TIA1","TIA1","TIA1","TIA1","TIA1","TIA1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","SR140","SR140","SR140","SR140","SR140","SR140","SR140","SR140","SR140","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1")
clear
clc
test=c("AQR","AQR","AQR","AQR","AQR","AQR","AQR","AQR","AQR","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","ARGLU1","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCAS2","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BCLAF1","BICC1","BICC1","BICC1","BICC1","BICC1","BICC1","BICC1","BICC1","BICC1","BUD13","BUD13","BUD13","BUD13","BUD13","BUD13","BUD13","BUD13","BUD13","BUD31","BUD31","BUD31","BUD31","BUD31","BUD31","BUD31","BUD31","BUD31","CELF1","CELF1","CELF1","CELF1","CELF1","CELF1","CELF1","CELF1","CELF1","CELF2","CELF2","CELF2","CELF2","CELF2","CELF2","CELF2","CELF2","CELF2","CELF3","CELF3","CELF3","CELF3","CELF3","CELF3","CELF3","CELF3","CELF3","CELF4","CELF4","CELF4","CELF4","CELF4","CELF4","CELF4","CELF4","CELF4","CELF5","CELF5","CELF5","CELF5","CELF5","CELF5","CELF5","CELF5","CELF5","CELF6","CELF6","CELF6","CELF6","CELF6","CELF6","CELF6","CELF6","CELF6","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","SFRS16","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF6","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CPSF7","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CSTF2T","CWC15","CWC15","CWC15","CWC15","CWC15","CWC15","CWC15","CWC15","CWC15","CWC25","CWC25","CWC25","CWC25","CWC25","CWC25","CWC25","CWC25","CWC25","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL1","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL2","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL3","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ELAVL4","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP1","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","ESRP2","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","EWSR1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP1","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUBP3","FUS","FUS","FUS","FUS","FUS","FUS","FUS","FUS","FUS","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","GRSF1","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA0","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPA2B1","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPAB","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPC","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPD","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPF","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH1","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH2","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPH3","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPK","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPL","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPM","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPR","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRNPUL1","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","HNRPLL","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS1","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS2","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHDRBS3","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","KHSRP","LSM1","LSM1","LSM1","LSM1","LSM1","LSM1","LSM1","LSM1","LSM1","LSM10","LSM10","LSM10","LSM10","LSM10","LSM10","LSM10","LSM10","LSM10","LSM2","LSM2","LSM2","LSM2","LSM2","LSM2","LSM2","LSM2","LSM2","LSM3","LSM3","LSM3","LSM3","LSM3","LSM3","LSM3","LSM3","LSM3","LSM4","LSM4","LSM4","LSM4","LSM4","LSM4","LSM4","LSM4","LSM4","LSM5","LSM5","LSM5","LSM5","LSM5","LSM5","LSM5","LSM5","LSM5","LSM6","LSM6","LSM6","LSM6","LSM6","LSM6","LSM6","LSM6","LSM6","LSM7","LSM7","LSM7","LSM7","LSM7","LSM7","LSM7","LSM7","LSM7","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LSMD1","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","LUC7L3","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MAGOH","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL1","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL2","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MBNL3","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3B","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3C","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MEX3D","MSI1","MSI1","MSI1","MSI1","MSI1","MSI1","MSI1","MSI1","MSI1","MSI2","MSI2","MSI2","MSI2","MSI2","MSI2","MSI2","MSI2","MSI2","NAA38","NAA38","NAA38","NAA38","NAA38","NAA38","NAA38","NAA38","NAA38","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA1","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","NOVA2","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP1","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP2","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP3","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PCBP4","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF18","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF19","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF3","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38A","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF38B","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF4","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40A","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF40B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF4B","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF6","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PRPF8","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PSIP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP1","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","PTBP2","ROD1","ROD1","ROD1","ROD1","ROD1","ROD1","ROD1","ROD1","ROD1","PUF60","PUF60","PUF60","PUF60","PUF60","PUF60","PUF60","PUF60","PUF60","QKI","QKI","QKI","QKI","QKI","QKI","QKI","QKI","QKI","RALY","RALY","RALY","RALY","RALY","RALY","RALY","RALY","RALY","RALYL","RALYL","RALYL","RALYL","RALYL","RALYL","RALYL","RALYL","RALYL","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER1","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","RAVER2","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","A2BP1","RBM9","RBM9","RBM9","RBM9","RBM9","RBM9","RBM9","RBM9","RBM9","RBM10","RBM10","RBM10","RBM10","RBM10","RBM10","RBM10","RBM10","RBM10","RBM12","RBM12","RBM12","RBM12","RBM12","RBM12","RBM12","RBM12","RBM12","RBM14","RBM14","RBM14","RBM14","RBM14","RBM14","RBM14","RBM14","RBM14","RBM15","RBM15","RBM15","RBM15","RBM15","RBM15","RBM15","RBM15","RBM15","RBM17","RBM17","RBM17","RBM17","RBM17","RBM17","RBM17","RBM17","RBM17","RBM18","RBM18","RBM18","RBM18","RBM18","RBM18","RBM18","RBM18","RBM18","RBM19","RBM19","RBM19","RBM19","RBM19","RBM19","RBM19","RBM19","RBM19","RBM20","RBM20","RBM20","RBM20","RBM20","RBM20","RBM20","RBM20","RBM20","RBM22","RBM22","RBM22","RBM22","RBM22","RBM22","RBM22","RBM22","RBM22","RBM24","RBM24","RBM24","RBM24","RBM24","RBM24","RBM24","RBM24","RBM24",
"RBM25","RBM25","RBM25","RBM25","RBM25","RBM25","RBM25","RBM25","RBM25","RBM26","RBM26","RBM26","RBM26","RBM26","RBM26","RBM26","RBM26","RBM26","RBM27","RBM27","RBM27","RBM27","RBM27","RBM27","RBM27","RBM27","RBM27","RBM28","RBM28","RBM28","RBM28","RBM28","RBM28","RBM28","RBM28","RBM28","RBM3","RBM3","RBM3","RBM3","RBM3","RBM3","RBM3","RBM3","RBM3","RBM33","RBM33","RBM33","RBM33","RBM33","RBM33","RBM33","RBM33","RBM33","RBM34","RBM34","RBM34","RBM34","RBM34","RBM34","RBM34","RBM34","RBM34","RBM38","RBM38","RBM38","RBM38","RBM38","RBM38","RBM38","RBM38","RBM38","RBM39","RBM39","RBM39","RBM39","RBM39","RBM39","RBM39","RBM39","RBM39","RBM4","RBM4","RBM4","RBM4","RBM4","RBM4","RBM4","RBM4","RBM4","RBM41","RBM41","RBM41","RBM41","RBM41","RBM41","RBM41","RBM41","RBM41","RBM42","RBM42","RBM42","RBM42","RBM42","RBM42","RBM42","RBM42","RBM42","RBM43","RBM43","RBM43","RBM43","RBM43","RBM43","RBM43","RBM43","RBM43","RBM45","RBM45","RBM45","RBM45","RBM45","RBM45","RBM45","RBM45","RBM45","RBM47","RBM47","RBM47","RBM47","RBM47","RBM47","RBM47","RBM47","RBM47","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM4B","RBM5","RBM5","RBM5","RBM5","RBM5","RBM5","RBM5","RBM5","RBM5","RBM6","RBM6","RBM6","RBM6","RBM6","RBM6","RBM6","RBM6","RBM6","RBM7","RBM7","RBM7","RBM7","RBM7","RBM7","RBM7","RBM7","RBM7","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS1","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS2","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMS3","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBMX2","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RBPMS2","RDBP","RDBP","RDBP","RDBP","RDBP","RDBP","RDBP","RDBP","RDBP","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPC3","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","RNPS1","SART1","SART1","SART1","SART1","SART1","SART1","SART1","SART1","SART1","SART3","SART3","SART3","SART3","SART3","SART3","SART3","SART3","SART3","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SCAF1","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS2IP","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","SFRS15","RBM16","RBM16","RBM16","RBM16","RBM16","RBM16","RBM16","RBM16","RBM16","SF1","SF1","SF1","SF1","SF1","SF1","SF1","SF1","SF1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A1","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A2","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3A3","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B1","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B2","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B3","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SF3B4","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFPQ","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS18","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SFRS8","SLU7","SLU7","SLU7","SLU7","SLU7","SLU7","SLU7","SLU7","SLU7","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMNDC1","SMU1","SMU1","SMU1","SMU1","SMU1","SMU1","SMU1","SMU1","SMU1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNIP1","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP200","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP25","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP27","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP40","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP48","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRNP70","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPA1","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPB2","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPC","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD1","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPD3","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPE","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SNRPF","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SFRS12","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK1","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK2","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRPK3","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM1","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM2","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM3","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SRRM4","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS1","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS13A","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS11","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS13B","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS2","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS3","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS4","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS5","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS6","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS7","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SFRS9","SYF2","SYF2","SYF2","SYF2","SYF2","SYF2","SYF2","SYF2","SYF2","TIA1","TIA1","TIA1","TIA1","TIA1","TIA1","TIA1","TIA1","TIA1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TIAL1","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2A","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","TRA2B","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF1","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","U2AF2","SR140","SR140","SR140","SR140","SR140","SR140","SR140","SR140","SR140","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1","UHMK1")
250/2
(250-25)/2 + 25
5250/3
log2(2)
get_expression <- function(abbr){
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
if (!exists("output")){
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}else{
toadd = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
toadd = toadd[2:nrow(toadd),]
output = cbind(output, toadd)
}
}
}else{
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",abbr),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}
rownames(output) = as.character(sapply(rownames(output),function(x) strsplit(x,"|")[[1]][1]))
return(output)
}
type="BRCA"
cancer_types = c(BRCA="BRCA",colorectal="COAD;READ")
get_expression <- function(abbr){
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
if (!exists("output")){
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}else{
toadd = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
toadd = toadd[2:nrow(toadd),]
output = cbind(output, toadd)
}
}
}else{
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",abbr),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}
rownames(output) = as.character(sapply(rownames(output),function(x) strsplit(x,"|")[[1]][1]))
return(output)
}
seqdata = get_expression(cancer_types[type])
protdata = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-proteomics/TCGA_%s.csv",type),row.names = 1)
genes = rownames(protdata)[rownames(protdata) %in% rownames(seqdata)]
get_expression <- function(abbr){
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
if (!exists("output")){
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}else{
toadd = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
toadd = toadd[2:nrow(toadd),]
output = cbind(output, toadd)
}
}
}else{
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",abbr),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"|")[[1]][1]))
output = output[rnames!="?",]; rnames=rnames[rnames!="?"]
rownames(output) = rnames
return(output)
}
seqdata = get_expression(cancer_types[type])
abbr="BRCA"
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
if (!exists("output")){
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}else{
toadd = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
toadd = toadd[2:nrow(toadd),]
output = cbind(output, toadd)
}
}
}else{
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",abbr),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"|")[[1]][1]))
output = output[rnames!="?",]; rnames=rnames[rnames!="?"]
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"|")[[1]][1]))
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"|")[[1]]))
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"\\|")[[1]]))
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"\\|")[[1]][1]))
get_expression <- function(abbr){
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
if (!exists("output")){
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}else{
toadd = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
toadd = toadd[2:nrow(toadd),]
output = cbind(output, toadd)
}
}
}else{
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",abbr),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"\\|")[[1]][1]))
output = output[rnames!="?",]; rnames=rnames[rnames!="?"]
rownames(output) = rnames
return(output)
}
seqdata = get_expression(cancer_types[type])
v
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
if (!exists("output")){
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}else{
toadd = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
toadd = toadd[2:nrow(toadd),]
output = cbind(output, toadd)
}
}
}else{
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",abbr),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"\\|")[[1]][1]))
output = output[rnames!="?",]; rnames=rnames[rnames!="?"]
test=unique(rnames)
test=duplicated(rnames)
test=rnames[duplicated(rnames)]
get_expression <- function(abbr){
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
if (!exists("output")){
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}else{
toadd = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
toadd = toadd[2:nrow(toadd),]
output = cbind(output, toadd)
}
}
}else{
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",abbr),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"\\|")[[1]][1]))
output = output[!duplicated(rnames),]; rnames=rnames[!duplicated(rnames)]
rownames(output) = rnames
return(output)
}
seqdata = get_expression(cancer_types[type])
genes = rownames(protdata)[rownames(protdata) %in% rownames(seqdata)]
samples = colnames(protdata)[colnames(protdata) %in% substr(colnames(seqdata),1,16)]
colnames(seqdata) = substr(colnames(seqdata),1,16)
temp_cor = data.frame(sapply(samples,function(x) cor(protnTE[genes,x],seqnTE[genes,x],method = "spearman")))
temp_cor = data.frame(sapply(samples,function(x) cor(protdata[genes,x],seqdata[genes,x],method = "spearman")))
temp_cor = data.frame(sapply(samples,function(x) cor(protdata[genes,x],seqdata[genes,x],method = "spearman",use="na.or.complete")))
cancer_types = c(BRCA="BRCA",colorectal="COAD;READ")
expcor = data.frame(SpearmanRho = numeric())
for (type in names(cancer_types)){
# Get data
seqdata = get_expression(cancer_types[type])
colnames(seqdata) = substr(colnames(seqdata),1,16)
protdata = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-proteomics/TCGA_%s.csv",type),row.names = 1)
# Find matching genes and samples
genes = rownames(protdata)[rownames(protdata) %in% rownames(seqdata)]
samples = colnames(protdata)[colnames(protdata) %in% colnames(seqdata)]
# Correlate
temp_cor = data.frame(sapply(samples,function(x) cor(protdata[genes,x],seqdata[genes,x],method = "spearman",use="na.or.complete")))
expcor = rbind(expcor,temp_cor)
}
# Correlate expression
get_expression <- function(abbr){
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
if (!exists("output")){
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}else{
toadd = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
toadd = toadd[2:nrow(toadd),]
output = cbind(output, toadd)
}
}
}else{
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",abbr),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"\\|")[[1]][1]))
output = output[!duplicated(rnames),]; rnames=rnames[!duplicated(rnames)]
rownames(output) = rnames
return(output)
}
cancer_types = c(BRCA="BRCA",colorectal="COAD;READ")
expcor = data.frame(SpearmanRho = numeric())
for (type in names(cancer_types)){
# Get data
seqdata = get_expression(cancer_types[type])
colnames(seqdata) = substr(colnames(seqdata),1,16)
protdata = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-proteomics/TCGA_%s.csv",type),row.names = 1)
# Find matching genes and samples
genes = rownames(protdata)[rownames(protdata) %in% rownames(seqdata)]
samples = colnames(protdata)[colnames(protdata) %in% colnames(seqdata)]
# Correlate
temp_cor = data.frame(sapply(samples,function(x) cor(protdata[genes,x],seqdata[genes,x],method = "spearman",use="na.or.complete")))
expcor = rbind(expcor,temp_cor)
}
View(expcor)
colnames(expcor) = "Spearman Rho"
View(expcor)
write.csv(correlations,"results/prot_VS_seq_correlations.csv")
write.csv(expcor,"results/prot_VS_seq_correlations.csv")
View(expcor)
write.csv(expcor,"results/prot_VS_seq_correlations.csv")
write.csv(expcor,"results/prot.csv")
write.csv(expcor,"results/prot_VS_seq_correlations.csv")
View(expcor)
View(temp_cor)
View(expcor)
sprintf("%s-%s",type,samples)
## Correlate expression
get_expression <- function(abbr){
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
if (!exists("output")){
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}else{
toadd = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",n),
row.names = 1, sep= "\t",na.strings="normalized_count")
toadd = toadd[2:nrow(toadd),]
output = cbind(output, toadd)
}
}
}else{
output = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-mRNAseq/20160128-%s-RNAseq2GeneNorm.txt",abbr),
row.names = 1, sep= "\t",na.strings="normalized_count")
output = output[2:nrow(output),]
}
rnames=as.character(sapply(rownames(output),function(x) strsplit(x,"\\|")[[1]][1]))
output = output[!duplicated(rnames),]; rnames=rnames[!duplicated(rnames)]
rownames(output) = rnames
return(output)
}
cancer_types = c(BRCA="BRCA",colorectal="COAD;READ")
expcor = data.frame(SpearmanRho = numeric())
for (type in names(cancer_types)){
# Get data
seqdata = get_expression(cancer_types[type])
colnames(seqdata) = substr(colnames(seqdata),1,16)
protdata = read.csv(sprintf("/home/xhernandez/Downloads/TCGA-proteomics/TCGA_%s.csv",type),row.names = 1)
# Find matching genes and samples
genes = rownames(protdata)[rownames(protdata) %in% rownames(seqdata)]
samples = colnames(protdata)[colnames(protdata) %in% colnames(seqdata)]
# Correlate
temp_cor = data.frame(sapply(samples,function(x) cor(protdata[genes,x],seqdata[genes,x],method = "spearman",use="na.or.complete")))
rownames(temp_cor) = sprintf("%s-%s",type,samples)
expcor = rbind(expcor,temp_cor)
}
colnames(expcor) = "Spearman Rho"
write.csv(expcor,"results/prot_VS_seq_correlations.csv")
View(expcor)
test = get_expression("COADREAD")
22*64
1200/60
1200/60
30*41
30*41/60
20*41/60
600/26
2.23^(-6)
e^(-6)
25000*(2.23^(-6))
25000*(2.71^(-6))
0.25²
3.1415*(0.25^2)
58.5-2.7
58.5+2.7
58.5-2.7
install.packages("BiocManager")
BiocManager::install("RTCGAToolbox")
BiocManager::update.packages("RTCGAToolbox")
library("devtools")
install_github("mksamur/RTCGAToolbox")
setwd("~/Dropbox/PhD/virus_CU")
library(RTCGAToolbox)
get_expression <- function(abbr){
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
dwload = getFirehoseData(dataset=n, RNASeq2GeneNorm=TRUE, destdir="/home/xhernandez/Downloads/TCGA-mRNAseq")
if (!exists("output")){
output = getData(dwload,"RNASeq2GeneNorm")[[1]]@DataMatrix
}else{
toadd = getData(dwload,"RNASeq2GeneNorm")[[1]]@DataMatrix
output = cbind(output, toadd)
}
}
}else{
dwload = getFirehoseData(dataset=abbr, RNASeq2GeneNorm=TRUE, destdir="/home/xhernandez/Downloads/TCGA-mRNAseq")
output = getData(dwload,"RNASeq2GeneNorm")[[1]]@DataMatrix
}
return(output)
}
## Analyze subclinical subsets for certain types
cancer_types = c("COAD","READ","GBM","BRCA","STAD","KIRP","KICH", "KIRC", "PRAD", "THCA","BLCA", "LIHC", "PAAD", "UCEC", "PCPG", "SKCM", "CHOL", "ESCA", "THYM", "CESC","LUAD","LUSC","HNSC")
genes = c("ACE2","TMPRSS2","DPP4","ST6GAL1","ST3GAL4")
dataset = c()
for (type in cancer_types){
# Upload gene expression data
rnaInfo = get_expression(type)
## Analyze expression status of genes
expr_samples = substr(colnames(rnaInfo),1,15)
mapped_normal = (regexpr("TCGA-[A-Z,0-9]{2}-[A-Z,0-9]{4}-11",expr_samples))==1
expr_samples = expr_samples[mapped_normal]
rnaInfo = rnaInfo[,mapped_normal, drop=FALSE]
# Select genes
genes_temp = genes[(genes %in% rownames(rnaInfo))]
# Save data
dataset_temp = data.frame(row.names = expr_samples)
dataset_temp[,genes_temp] = t(rnaInfo[genes_temp,])
if (type=="HNSC"){
# Subclinical classification
clinic = t(read.csv(sprintf("data/%s.clin.merged.txt",type), row.names = 1))
patients=gsub("\\.","-",toupper(rownames(clinic)))
classification = as.character(sapply(rownames(dataset_temp),function(x) as.character(clinic[grep(substr(x,1,12),patients),"patient.anatomic_neoplasm_subdivision"])))
dataset_temp$catype = sprintf("%s-%s",rep(type,length(classification)),classification)
}else{
dataset_temp$catype = type
}
dataset = rbind(dataset, dataset_temp)
}
outtable = data.frame(row.names=unique(dataset$catype))
outtable[,genes] = NA
for (t in rownames(outtable)){
outtable[t,genes] = colMeans(dataset[dataset$catype==t,genes],na.rm=T)
}
write.csv(outtable, "results/receptors_expression_coronavirus.csv")
library(RTCGAToolbox)
get_expression <- function(abbr){
if (sum(grep(";",abbr))>0){
names = unlist(strsplit(abbr,";"))
for (n in names){
dwload = getFirehoseData(dataset=n, RNASeq2GeneNorm=TRUE, destdir="/home/xhernandez/Downloads/TCGA-mRNAseq")
if (!exists("output")){
output = getData(dwload,"RNASeq2GeneNorm")[[1]]@DataMatrix
}else{
toadd = getData(dwload,"RNASeq2GeneNorm")[[1]]@DataMatrix
output = cbind(output, toadd)
}
}
}else{
dwload = getFirehoseData(dataset=abbr, RNASeq2GeneNorm=TRUE, destdir="/home/xhernandez/Downloads/TCGA-mRNAseq")
output = getData(dwload,"RNASeq2GeneNorm")[[1]]@DataMatrix
}
return(output)
}
## Analyze subclinical subsets for certain types
cancer_types = c("COAD","READ","GBM","BRCA","STAD","KIRP","KICH", "KIRC", "PRAD", "THCA","BLCA", "LIHC", "PAAD", "UCEC", "PCPG", "SKCM", "CHOL", "ESCA", "THYM", "CESC","LUAD","LUSC","HNSC")
genes = c("ACE2","TMPRSS2","BSG","DPP4","ST6GAL1","ST3GAL4")
dataset = c()
for (type in cancer_types){
# Upload gene expression data
rnaInfo = get_expression(type)
## Analyze expression status of genes
expr_samples = substr(colnames(rnaInfo),1,15)
mapped_normal = (regexpr("TCGA-[A-Z,0-9]{2}-[A-Z,0-9]{4}-11",expr_samples))==1
expr_samples = expr_samples[mapped_normal]
rnaInfo = rnaInfo[,mapped_normal, drop=FALSE]
# Select genes
genes_temp = genes[(genes %in% rownames(rnaInfo))]
# Save data
dataset_temp = data.frame(row.names = expr_samples)
dataset_temp[,genes_temp] = t(rnaInfo[genes_temp,])
if (type=="HNSC"){
# Subclinical classification
clinic = t(read.csv(sprintf("data/%s.clin.merged.txt",type), row.names = 1))
patients=gsub("\\.","-",toupper(rownames(clinic)))
classification = as.character(sapply(rownames(dataset_temp),function(x) as.character(clinic[grep(substr(x,1,12),patients),"patient.anatomic_neoplasm_subdivision"])))
dataset_temp$catype = sprintf("%s-%s",rep(type,length(classification)),classification)
}else{
dataset_temp$catype = type
}
dataset = rbind(dataset, dataset_temp)
}
outtable = data.frame(row.names=unique(dataset$catype))
outtable[,genes] = NA
for (t in rownames(outtable)){
outtable[t,genes] = colMeans(dataset[dataset$catype==t,genes],na.rm=T)
}
write.csv(outtable, "results/receptors_expression_coronavirus.csv")
View(dataset)
